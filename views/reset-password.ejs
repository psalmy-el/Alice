<!-- views/reset-password.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reset Password</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    body {
      background-color: #f8f9fa;
    }
    .reset-container {
      max-width: 400px;
      margin: 100px auto;
    }
    .card {
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
    .card-header {
      border-radius: 10px 10px 0 0 !important;
    }
    .logo-container {
      text-align: center;
      margin-bottom: 20px;
    }
    .logo {
      font-size: 40px;
      color: #343a40;
    }
    .password-strength {
      height: 5px;
      margin-top: 5px;
      border-radius: 2px;
    }
  </style>
</head>
<body>
  <div class="container reset-container">
    <div class="logo-container">
      <i class="fas fa-photo-video logo"></i>
      <h3>Media Admin</h3>
    </div>
    
    <div class="card">
      <div class="card-header bg-success text-white">
        <h4 class="mb-0">Reset Password</h4>
      </div>
      <div class="card-body">
        <% if (error && error.length > 0) { %>
          <div class="alert alert-danger">
            <%= error %>
          </div>
        <% } %>
        
        <form action="/reset-password/<%= token %>" method="POST" id="resetForm">
          <input type="hidden" name="email" value="<%= email %>">
          
          <div class="mb-3">
            <label for="password" class="form-label">New Password</label>
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-lock"></i></span>
              <input type="password" class="form-control" id="password" name="password" required minlength="8">
              <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                <i class="fas fa-eye"></i>
              </button>
            </div>
            <div class="password-strength bg-danger" id="passwordStrength"></div>
            <small class="text-muted">Password must be at least 8 characters long</small>
          </div>
          
          <div class="mb-4">
            <label for="confirm_password" class="form-label">Confirm Password</label>
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-lock"></i></span>
              <input type="password" class="form-control" id="confirm_password" name="confirm_password" required minlength="8">
            </div>
            <div id="passwordMatch" class="form-text"></div>
          </div>
          
          <div class="d-grid gap-2">
            <button type="submit" class="btn btn-success" id="submitBtn">
              <i class="fas fa-save me-2"></i> Reset Password
            </button>
          </div>
        </form>
        
        <p class="text-center mt-3">
          <a href="/login">Back to Login</a>
        </p>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const passwordInput = document.getElementById('password');
      const confirmInput = document.getElementById('confirm_password');
      const togglePasswordBtn = document.getElementById('togglePassword');
      const passwordStrength = document.getElementById('passwordStrength');
      const passwordMatch = document.getElementById('passwordMatch');
      const submitBtn = document.getElementById('submitBtn');
      
      // Toggle password visibility
      togglePasswordBtn.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        this.querySelector('i').classList.toggle('fa-eye');
        this.querySelector('i').classList.toggle('fa-eye-slash');
      });
      
      // Check password strength
      passwordInput.addEventListener('input', function() {
        const value = this.value;
        let strength = 0;
        
        if (value.length >= 8) strength += 25;
        if (value.match(/[a-z]/)) strength += 25;
        if (value.match(/[A-Z]/)) strength += 25;
        if (value.match(/[0-9]/)) strength += 25;
        
        passwordStrength.style.width = strength + '%';
        
        if (strength < 50) {
          passwordStrength.className = 'password-strength bg-danger';
        } else if (strength < 75) {
          passwordStrength.className = 'password-strength bg-warning';
        } else {
          passwordStrength.className = 'password-strength bg-success';
        }
        
        checkPasswordMatch();
      });
      
      // Check password match
      confirmInput.addEventListener('input', checkPasswordMatch);
      
      function checkPasswordMatch() {
        if (confirmInput.value === '') {
          passwordMatch.textContent = '';
          passwordMatch.className = 'form-text';
          return;
        }
        
        if (passwordInput.value === confirmInput.value) {
          passwordMatch.textContent = 'Passwords match!';
          passwordMatch.className = 'form-text text-success';
          submitBtn.disabled = false;
        } else {
          passwordMatch.textContent = 'Passwords do not match!';
          passwordMatch.className = 'form-text text-danger';
          submitBtn.disabled = true;
        }
      }
    });
  </script>
</body>
</html>